# qcd
# Quickly `cd` into some frequently accessed project directories

# Copyright Â© 2016 Teddy Wing
# This file is licensed under the GNU GPLv3+. Please see COPYING
# for more information.

XDG_CONFIG_HOME=${XDG_CONFIG_HOME:-"${HOME}/.config"}
QCD_CONFIG_DIR=${QCD_CONFIG_DIR:-"${XDG_CONFIG_HOME}/qcd"}
QCD_DATABASE_FILE=${QCD_DATABASE_FILE:-"${QCD_CONFIG_DIR}/database"}


function __qcd_print_usage () {
		cat 1>&2 <<__EOF__
Usage:
	qcd SHORTCUT
	qcd -acrlh SHORTCUT [PATH]

	The first call changes to the directory specified by SHORTCUT.
	The second allows manipulation of the shortcut database.

	-a	Add a new shortcut pointing to PATH
	-c	Change an existing shortcut to PATH
	-r	Remove SHORTCUT
	-l	List shortcuts
	-h	Display this help
__EOF__
}

function __qcd_setup () {
	mkdir -p $QCD_CONFIG_DIR
	touch $QCD_DATABASE_FILE
}

function __qcd_absolute_path () {
	(cd "$(dirname "$1")" && printf "%s/%s\n" "$(pwd)" "$(basename "$1")")
}

function __qcd_shortcut_exists () {
	local shortcut=$1
	return $(awk '{ print $1 }' $QCD_DATABASE_FILE | grep "^${shortcut}$" >/dev/null 2>&1; echo $?)
}

function __qcd_add_shortcut () {
	local shortcut=$1
	local path=$2

	# Don't add the shortcut if it already exists
	if ! __qcd_shortcut_exists $shortcut; then
		path=$(__qcd_absolute_path "$path")
		echo "${shortcut}	${path}" >> $QCD_DATABASE_FILE
	fi
}

function __qcd_change_shortcut () {
	local shortcut=$1
	local path=$2

	if __qcd_shortcut_exists $shortcut; then
		path=$(__qcd_absolute_path "$path")

		# The `//\//\/` escapes slashes in the path so that `sed` doesn't complain
		sed -i.bak -E "s/^${shortcut}	.+$/${shortcut}	${path//\//\\/}/" $QCD_DATABASE_FILE
	fi
}

function __qcd_remove_shortcut () {
	local shortcut=$1

	if __qcd_shortcut_exists $shortcut; then
		sed -i.bak -E "/^${shortcut}	.+/d" $QCD_DATABASE_FILE
	fi
}

function __qcd_list_shortcuts () {
	column -t -s '	' $QCD_DATABASE_FILE | sort
}

function __qcd_change_directory () {
	local shortcut=$1

	if __qcd_shortcut_exists $shortcut; then
		local directory=$(awk -v shortcut="$shortcut" '{
			if ($1 == shortcut)
				{ sub(/[[:space:]]*([^[:space:]]+[[:space:]]+)/,""); print }
		}' $QCD_DATABASE_FILE)

		cd "$directory"
	fi
}

function qcd () {
	if [[ $# < 1 ]]; then
		__qcd_print_usage
		return
	fi

	__qcd_setup

	local command=$1
	local shortcut=$2
	local path=$3

	case $command in
		-a)
			__qcd_add_shortcut $shortcut "$path"
			;;
		-c)
			__qcd_change_shortcut $shortcut "$path"
			;;
		-r)
			__qcd_remove_shortcut $shortcut
			;;
		-l)
			__qcd_list_shortcuts
			;;
		-h|--help)
			__qcd_print_usage
			;;
		*)
			__qcd_change_directory $command
			;;
	esac
}

 # vim:ft=sh:
